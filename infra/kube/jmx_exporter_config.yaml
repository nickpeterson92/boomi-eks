apiVersion: v1
kind: ConfigMap
metadata:
  name: jmx-exporter-config
data:
  jmx_exporter_config.yaml: |
    startDelaySeconds: 0
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    rules:
      # --- JVM Memory Metrics ---
      # Heap Memory Usage
      - pattern: 'java.lang<type=Memory><>HeapMemoryUsage'
        name: jvm_memory_heap_used_bytes
        type: GAUGE
        value: HeapMemoryUsage.used

      # Non-Heap Memory Usage
      - pattern: 'java.lang<type=Memory><>NonHeapMemoryUsage'
        name: jvm_memory_non_heap_used_bytes
        type: GAUGE
        value: NonHeapMemoryUsage.used

      # --- Garbage Collection Metrics ---
      # Count of collections per garbage collector instance
      - pattern: 'java.lang<type=GarbageCollector,name=(.*)><>CollectionCount'
        name: jvm_gc_collection_count
        labels:
          gc: "$1"
        type: COUNTER
        help: "Total number of garbage collections for the given collector"

      # Time spent in garbage collection (in milliseconds, convert to seconds if needed)
      - pattern: 'java.lang<type=GarbageCollector,name=(.*)><>CollectionTime'
        name: jvm_gc_collection_milliseconds_total
        labels:
          gc: "$1"
        type: COUNTER
        help: "Total time spent in garbage collection in milliseconds"

      # --- Threading Metrics ---
      # Number of live threads in the JVM
      - pattern: 'java.lang<type=Threading><>ThreadCount'
        name: jvm_threads_current
        type: GAUGE
        help: "Current number of live threads in the JVM"

      # --- Class Loading Metrics ---
      # Number of classes currently loaded in the JVM
      - pattern: 'java.lang<type=ClassLoading><>LoadedClassCount'
        name: jvm_classes_loaded
        type: GAUGE
        help: "Current number of classes loaded in the JVM"

      # --- Operating System Metrics ---
      # Process CPU load (if supported by your JVM)
      - pattern: 'java.lang<type=OperatingSystem><>ProcessCpuLoad'
        name: jvm_process_cpu_load
        type: GAUGE
        help: "JVM process CPU load as a fraction between 0.0 and 1.0"

      # --- Disk Usage ---
      - pattern: 'java.lang<type=OperatingSystem><>FreePhysicalMemorySize'
        name: jvm_memory_physical_free_bytes
        type: GAUGE
        help: "Free physical memory in bytes"

      - pattern: 'java.lang<type=OperatingSystem><>TotalPhysicalMemorySize'
        name: jvm_memory_physical_total_bytes
        type: GAUGE
        help: "Total physical memory in bytes"

      # --- IOPS Metrics (if available in Boomi JMX) ---
      - pattern: 'java.lang<type=OperatingSystem><>DiskReadBytes'
        name: jvm_disk_read_bytes_total
        type: COUNTER
        help: "Total disk read bytes"

      - pattern: 'java.lang<type=OperatingSystem><>DiskWriteBytes'
        name: jvm_disk_write_bytes_total
        type: COUNTER
        help: "Total disk write bytes"

      # --- Inode Exhaustion (if exposed via JMX) ---
      - pattern: 'java.lang<type=FileSystem><>FreeInodes'
        name: jvm_filesystem_free_inodes
        type: GAUGE
        help: "Free inodes available"

      - pattern: 'java.lang<type=FileSystem><>TotalInodes'
        name: jvm_filesystem_total_inodes
        type: GAUGE
        help: "Total inodes available"
        
      # --- Boomi-Specific Metrics (Optional) ---
      # If Boomi exposes custom MBeans, you might see metrics like processed documents or error counts.
      # Uncomment and adjust the rule below if such an MBean is available.
      #
      # - pattern: 'com.boomi<type=Atom><>ProcessedDocuments'
      #   name: boomi_processed_documents_total
      #   type: COUNTER
      #   help: "Total number of documents processed by the Boomi Atom"
